name: Check Spelling
on:
  push:
    branches: ["**"]
    tags-ignore: ["**"]
  pull_request_target:
  issue_comment:
    types: [created]

jobs:
  spelling:
    name: Check Spelling
    permissions:
      contents: read
      pull-requests: read
      actions: read
      security-events: write
    outputs:
      followup: ${{ steps.spelling.outputs.followup }}
      internal_state_directory: ${{ steps.spelling.outputs.internal_state_directory }}
      docker_container: ${{ steps.spelling.outputs.docker_container }}
    env:
      workflow_check_commit_messages: commits
    runs-on: ubuntu-latest
    if: "contains(github.event_name, 'pull_request') || github.event_name == 'push'"
    concurrency:
      group: spelling-${{ github.event.pull_request.number || github.ref }}
      # note: If you use only_check_changed_files, you do not want cancel-in-progress
      cancel-in-progress: true
    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ !contains(env.workflow_check_commit_messages, 'commits') && '1' || '0' }}
    - name: test-clean
      shell: bash
      run:
        cp -R . ../introspected/;
        mv ../introspected .
    - name: test-merge
      if: "contains(github.event_name, 'pull_request')"
      uses: check-spelling/checkout-merge@v0.0.3
      with:
        path: introspected
    - name: check-spelling
      if: env.MERGE_FAILED != '1'
      id: spelling
      uses: ./
      with:
        experimental_apply_changes_via_bot: 1
        suppress_push_for_open_pull_request: 1
        check_file_names: 1
        post_comment: 0
        use_sarif: 1
        experimental_path: introspected
        unknown_word_limit: 2
        spell_check_this: check-spelling/spell-check-this@prerelease
        checkout: false
        # this repository doesn't use php, but the dictionary has fairly good coverage
        extra_dictionaries:
          cspell:software-terms/src/software-terms.txt
          cspell:php/php.txt
        check_commit_messages: ${{ env.workflow_check_commit_messages }}
        ignore-pattern: '[^\p{Ll}\p{Lm}\p{Lt}\p{Lu}]'
        upper-pattern: '[\p{Lu}\p{Lt}\p{Lm}]'
        lower-pattern: '[\p{Ll}\p{Lm}]'
        not-lower-pattern: '[^\p{Ll}\p{Lm}]'
        not-upper-or-lower-pattern: '[^\p{Lu}\p{Lt}\p{Lm}]'
        punctuation-pattern: "'"

  comment:
    name: Report
    runs-on: ubuntu-latest
    needs: spelling
    permissions:
      contents: write
      pull-requests: write
    if: (success() || failure()) && needs.spelling.outputs.followup
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: comment
      uses: ./
      with:
        experimental_apply_changes_via_bot: 1
        checkout: false
        spell_check_this: check-spelling/spell-check-this@prerelease
        task: ${{ needs.spelling.outputs.followup }}
        internal_state_directory: ${{ needs.spelling.outputs.docker_container && needs.spelling.outputs.internal_state_directory }}
        caller_container: ${{ needs.spelling.outputs.docker_container }}

  update:
    name: Update PR
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    if: ${{
        github.event_name == 'issue_comment' &&
        github.event.issue.pull_request &&
        contains(github.event.comment.body, '@check-spelling-bot apply')
      }}
    concurrency:
      group: spelling-update-${{ github.event.issue.number }}
      cancel-in-progress: false
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: apply spelling updates
      uses: ./
      with:
        experimental_apply_changes_via_bot: 1
        checkout: false
        ssh_key: "${{ secrets.CHECK_SPELLING }}"
